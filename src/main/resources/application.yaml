server:
  port: 4550

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.reform.jps.controllers

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/jps/"
  application:
    name: Judicial Payment Service
    jackson:
      property-naming-strategy: SNAKE_CASE
    datasource:
      driver-class-name: org.postgresql.Driver
      #url: jdbc:postgresql://${JUDICIAL_PAYMENT_SERVICE_DB_HOST:localhost}:${JUDICIAL_PAYMENT_SERVICE_DB_PORT:5060}/${JUDICIAL_PAYMENT_SERVICE_DB_NAME:judicial-payment-service}${JUDICIAL_PAYMENT_SERVICE_DB_OPTIONS:}
      #username: ${JUDICIAL_PAYMENT_SERVICE_DB_USERNAME:jps}
      #password: ${JUDICIAL_PAYMENT_SERVICE_DB_PASSWORD:jps}
      url: jdbc:postgresql://jps-judicial-payment-service-pr-36-postgresql:5432/javadatabase?stringtype=unspecified
      username: javapostgres
      password: javapassword
      type: com.zaxxer.hikari.HikariDataSource
      hikari:
        minimumIdle: 2
        maximumPoolSize: 10
        idleTimeout: 10000
        poolName: JPSHikariCP
        maxLifetime: 7200000
        connectionTimeout: 30000
    jpa:
      database: postgresql
      show-sql: false
      hibernate:
        ddl-auto: none
      properties:
        hibernate:
          jdbc:
            time_zone: UTC
    flyway:
      out-of-order: true
      ignore-missing-migrations: true

azure:
  application-insights:
    instrumentation-key: ${jps.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}

dbMigration:
  # When true, the app will run DB migration on startup.
  # Otherwise, it will just check if all migrations have been applied (and fail to start if not).
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}
